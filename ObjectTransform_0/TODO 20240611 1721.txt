collision 클래스 추가 및 구현

DXObject 에서 Vertex 관련이나 pos 관련 부분 Acter 로 빼기 (렌더 관련된 데이터들만 남김)
 -> 직접적으로 Object 클래스를 사용하지 말란 이야기
 -> Acter

collision sample 클래스에 연결 (Acter 클래스를 통해)

sample::frame 에 uilist 컬리전 추가해서 조건문으로 테스트
sample::render 에도 마찬가지로 컬리전 테스트 코드 추가
(마우스가 위에 올라가면 ui 사라지게)

------ 여기까지 했음 20240611 17:21 ----------------

sample::frame 에 npc 컬리전 추가해서 조건문으로 테스트
sample::render 에도 마찬가지로 컬리전 테스트 코드 추가
(npc 가 hero 랑 충돌하면 사라지게)

초기때에는 맞는데 프레임이 돌면서 RECT 갱신을 안해줘서 오류가 남
(collision 의 RECT 와 실제 오브젝트의 움직임이 일치하지 않음)
 -> acter 의 move 에서 m_rt 도 업데이트를 해줘야함
 -> hlafW hlafH 를 구해서 m_vPos 값에서 뺴주고 더해주면서 RECT 값을 갱신함
 -> m_vPos(RECT 의 정중앙값, object 의 위치값) 을 기준으로 사각형을 갱신해주는 것임

하지만 동기화 작업을 해주는 과정에서 정수 실수간의 차이 때문에 프레임이 늘어날수록 오차가 증가
 -> 처음부터 렌더링을 하는 정점 6개(사각형 = 삼각형 x 2 의 정점)를 갖고 collision RECT 를
     구성하면 오차가 생길 이유가 없음
 -> TPawn::Move 를 그렇게 수정

Sample 에 쉐이더리소스뷰 멤버변수로 추가 (숫자 텍스처 10개를 넣기 위해)

Sample::Init() 에 텍스쳐 for 구문으로 추가(숫자 텍스처 10개)

텍스쳐 변경을 위한 DXObeject::Render 구조 변경
 -> PostRender PreRender 메소드 만들어서 분리 (Draw 콜 PostRender 로 빼기)
 -> 중간에 다른 쉐이더리소스뷰를 사용해서 텍스처 바꿀수있게
 -> Draw콜 이전에는 순서에 상관없이 바꿀수있기 때문

Sample::Render() 에서 pre post render 사용하여 ui 텍스처 변경

NPCcounter 멤버 추가하고 Sample::Init() 에서 npclist size 받아와서 counter 초기화

Sample::Frame() 에서 NPCcounter 갱신 (매 프레임마다 갱신하면 안되고 조건을 걸어서 갱신)

Sample::Render() 에서 NPCcounter에 따라 ui 달라지게 수정

Sample::Render() 에 gameEnding bool 플래그 변수 추가

Core 클래스에 m_bGameRun 변수 추가

Sample::Render() 에서 m_bGameRun 에 gameEnding bool 플래그 대입

Core의 GameRun() while문 조건을 m_bGameRun 로 바꿔서 조건을 만족하면 게임이 끝나게 수정

Sample::Render() 에서 npc 에 조건문 걸어서 gameEnding bool 플래그가 바뀌게 수정
 -> npc 다사라지면 bool 플래그가 바뀌게끔

Sample::Init() 에서 hero 의 스피드 변수 가져와서 수정 (나만 빠르게 움직일 수 있게)

Sample::Frame() 에서  m_iNpcCounter 에서 음수값이 나오지 않게 max 매크로로 안전장치 추가